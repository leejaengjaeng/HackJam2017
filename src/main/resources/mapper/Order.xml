<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hackjam.dao.OrderDAO">
    <resultMap id="employeeResultMap" type="Employee">
        <id property="employeeNo" column="employee_no"/>
        <result property="employeeName" column="employee_name"/>
        <result property="email" column="email"/>
    </resultMap>

    <resultMap id="orderResultMap" type="Order">
        <id property="orderId" column="order_id"/>
        <result property="orderYmdt" column="order_ymdt"/>
        <result property="finishYmdt" column="finish_ymdt"/>
        <result property="cost" column="cost"/>
        <result property="status" column="status"/>
        <association property="employee" resultMap="employeeResultMap"/>
    </resultMap>

    <select id="select" resultMap="orderResultMap" parameterType="int">
		SELECT
			order_id,
			e.employee_no,
			e.employee_name,
			(SELECT SUM(cost) FROM order_detail where order_id = o.order_id) AS cost,
			order_ymdt,
			finish_ymdt,
			status
		FROM
			`order` o
		JOIN
			employee e
		ON
			o.employee_no = e.employee_no
		WHERE
			order_id = #{orderId}
	</select>

    <select id="selectAll" resultMap="orderResultMap">
		SELECT
			order_id,
			e.employee_no,
			e.employee_name,
			(SELECT SUM(cost) FROM order_detail where order_id = o.order_id) AS cost,
			order_ymdt,
			finish_ymdt,
			status
		FROM
			`order` o
		JOIN
			employee e
		ON
			o.employee_no = e.employee_no
		ORDER BY
			order_id DESC
	</select>

    <select id="selectAllByEmployeeNo" resultMap="orderResultMap" parameterType="String">
		SELECT
			order_id,
			e.employee_no,
			e.employee_name,
			(SELECT SUM(cost) FROM order_detail where order_id = o.order_id) AS cost,
			order_ymdt,
			finish_ymdt,
			status
		FROM
			`order` o
		JOIN
			employee e
		ON
			o.employee_no = e.employee_no
		WHERE
			o.employee_no = #{employeeNo}
		ORDER BY
			order_id DESC
	</select>

    <insert id="insert" parameterType="Order" useGeneratedKeys="true" keyProperty="orderId">
		INSERT
		INTO
			`order` (
			employee_no,
			order_ymdt,
			status
		)
		VALUES (
			#{employee.employeeNo},
			NOW(),
			#{status}
		)
	</insert>

	<update id="updateOrderStatus" parameterType="Map">
		UPDATE
			`order`
		SET
			status = #{status}
		WHERE
			order_id = #{orderId}
	</update>
</mapper>